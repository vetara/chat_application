[{"C:\\xampp\\htdocs\\chat_application\\src\\index.js":"1","C:\\xampp\\htdocs\\chat_application\\src\\App.js":"2","C:\\xampp\\htdocs\\chat_application\\src\\components\\ChatFeed.jsx":"3","C:\\xampp\\htdocs\\chat_application\\src\\components\\MyMessage.jsx":"4","C:\\xampp\\htdocs\\chat_application\\src\\components\\MessageForm.jsx":"5","C:\\xampp\\htdocs\\chat_application\\src\\components\\TheirMessage.jsx":"6"},{"size":191,"mtime":1614555892524,"results":"7","hashOfConfig":"8"},{"size":526,"mtime":1614567276285,"results":"9","hashOfConfig":"8"},{"size":3019,"mtime":1614566559106,"results":"10","hashOfConfig":"8"},{"size":608,"mtime":1614561367684,"results":"11","hashOfConfig":"8"},{"size":2015,"mtime":1614566707614,"results":"12","hashOfConfig":"8"},{"size":1395,"mtime":1614566779302,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"zslcnt",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\xampp\\htdocs\\chat_application\\src\\index.js",[],["28","29"],"C:\\xampp\\htdocs\\chat_application\\src\\App.js",[],"C:\\xampp\\htdocs\\chat_application\\src\\components\\ChatFeed.jsx",[],"C:\\xampp\\htdocs\\chat_application\\src\\components\\MyMessage.jsx",[],"C:\\xampp\\htdocs\\chat_application\\src\\components\\MessageForm.jsx",["30"],"import { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { sendOutlined, PictureOutlined, SendOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState(''); // Initial Value Of Message Is An Empty String\r\n    //Props To Be Reconstructed\r\n    const { chatId, creds} = props;\r\n\r\n    //Submission Handler\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault(); //Prevents The Browser From Refreshing When Form Is Submitted\r\n\r\n        const text = value.trim();\r\n\r\n        if (text.length > 0) {\r\n            sendMessage(creds, chatId, { text });\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    //Input Field Handler\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value); //Value Of Input\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    //File Upload Handler\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\r\n    }\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className=\"message-input\" \r\n                placeholder=\"Type a message\" \r\n                value={value} \r\n                onChange={handleChange} \r\n                onSubmit={handleSubmit}\r\n                type=\"text\"\r\n            />\r\n            <label htmlFor='upload-button'> \r\n                <span className='image-button'>\r\n                    <PictureOutlined className='picture-icon' />\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id='upload-button'\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload.bind(this)}    \r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm;","C:\\xampp\\htdocs\\chat_application\\src\\components\\TheirMessage.jsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":10,"nodeType":"37","messageId":"38","endLine":3,"endColumn":22},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'sendOutlined' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]