{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\chat_application\\\\src\\\\components\\\\MessageForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { sendMessage, isTyping } from 'react-chat-engine';\nimport { PictureOutlined, SendOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageForm = props => {\n  _s();\n\n  const [value, setValue] = useState(''); // Initial Value Of Message Is An Empty String\n  //Props To Be Reconstructed\n\n  const {\n    chatId,\n    creds\n  } = props;\n  const username = \"Vetara\";\n  const authObject = {\n    'Project-ID': '67ec309f-4db7-4a2d-8c5f-5310843be5c7',\n    'User-Name': 'Vetara',\n    'User-Secret': 'MeekendMusic2'\n  }; //Submission Handler\n\n  const handleSubmit = event => {\n    event.preventDefault(); //Prevents The Browser From Refreshing When Form Is Submitted\n\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, {\n        text\n      });\n      setValue('');\n    }\n  }; //Input Field Handler\n\n\n  const handleChange = event => {\n    setValue(event.target.value); //Value Of Input\n\n    isTyping(authObject, chatId, username);\n  }; //File Upload Handler\n\n\n  const handleUpload = event => {\n    sendMessage(creds, chatId, {\n      files: event.target.files,\n      text: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"message-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"message-input\",\n      placeholder: \"Type a message\",\n      value: value,\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"image-button\",\n        children: /*#__PURE__*/_jsxDEV(PictureOutlined, {\n          className: \"picture-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: false,\n      id: \"upload-button\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleUpload.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"send-button\",\n      children: /*#__PURE__*/_jsxDEV(SendOutlined, {\n        className: \"send-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageForm, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["C:/xampp/htdocs/chat_application/src/components/MessageForm.jsx"],"names":["useState","sendMessage","isTyping","PictureOutlined","SendOutlined","MessageForm","props","value","setValue","chatId","creds","username","authObject","handleSubmit","event","preventDefault","text","trim","length","handleChange","target","handleUpload","files","display","bind"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,mBAAtC;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAD2B,CACa;AACxC;;AACA,QAAM;AAAES,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBJ,KAAzB;AACA,QAAMK,QAAQ,GAAG,QAAjB;AAEA,QAAMC,UAAU,GAAG;AAAC,kBAAc,sCAAf;AAAuD,iBAAa,QAApE;AAA8E,mBAAe;AAA7F,GAAnB,CAN2B,CAQ3B;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN,GAD4B,CACJ;;AAExB,UAAMC,IAAI,GAAGT,KAAK,CAACU,IAAN,EAAb;;AAEA,QAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACjBjB,MAAAA,WAAW,CAACS,KAAD,EAAQD,MAAR,EAAgB;AAAEO,QAAAA;AAAF,OAAhB,CAAX;AACAR,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GATD,CAT2B,CAoB3B;;;AACA,QAAMW,YAAY,GAAIL,KAAD,IAAW;AAC5BN,IAAAA,QAAQ,CAACM,KAAK,CAACM,MAAN,CAAab,KAAd,CAAR,CAD4B,CACE;;AAE9BL,IAAAA,QAAQ,CAACU,UAAD,EAAaH,MAAb,EAAqBE,QAArB,CAAR;AACH,GAJD,CArB2B,CA2B3B;;;AACA,QAAMU,YAAY,GAAIP,KAAD,IAAW;AAC5Bb,IAAAA,WAAW,CAACS,KAAD,EAAQD,MAAR,EAAgB;AAAEa,MAAAA,KAAK,EAAER,KAAK,CAACM,MAAN,CAAaE,KAAtB;AAA6BN,MAAAA,IAAI,EAAE;AAAnC,KAAhB,CAAX;AACH,GAFD;;AAGA,sBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEH,YAAzC;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,WAAW,EAAC,gBAFhB;AAGI,MAAA,KAAK,EAAEN,KAHX;AAII,MAAA,QAAQ,EAAEY,YAJd;AAKI,MAAA,QAAQ,EAAEN,YALd;AAMI,MAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,+BACI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ,eAcI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAE,KAFd;AAGI,MAAA,EAAE,EAAC,eAHP;AAII,MAAA,KAAK,EAAE;AAAEU,QAAAA,OAAO,EAAE;AAAX,OAJX;AAKI,MAAA,QAAQ,EAAEF,YAAY,CAACG,IAAb,CAAkB,IAAlB;AALd;AAAA;AAAA;AAAA;AAAA,YAdJ,eAqBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,aAAhC;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA1DD;;GAAMnB,W;;KAAAA,W;AA4DN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { PictureOutlined, SendOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState(''); // Initial Value Of Message Is An Empty String\r\n    //Props To Be Reconstructed\r\n    const { chatId, creds} = props;\r\n    const username = \"Vetara\";\r\n\r\n    const authObject = {'Project-ID': '67ec309f-4db7-4a2d-8c5f-5310843be5c7', 'User-Name': 'Vetara', 'User-Secret': 'MeekendMusic2'}\r\n\r\n    //Submission Handler\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault(); //Prevents The Browser From Refreshing When Form Is Submitted\r\n\r\n        const text = value.trim();\r\n\r\n        if (text.length > 0) {\r\n            sendMessage(creds, chatId, { text });\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    //Input Field Handler\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value); //Value Of Input\r\n\r\n        isTyping(authObject, chatId, username);\r\n    }\r\n\r\n    //File Upload Handler\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\r\n    }\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className=\"message-input\" \r\n                placeholder=\"Type a message\" \r\n                value={value} \r\n                onChange={handleChange} \r\n                onSubmit={handleSubmit}\r\n                type=\"text\"\r\n            />\r\n            <label htmlFor='upload-button'> \r\n                <span className='image-button'>\r\n                    <PictureOutlined className='picture-icon' />\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id='upload-button'\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload.bind(this)}    \r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm;"]},"metadata":{},"sourceType":"module"}