{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\chat_application\\\\src\\\\components\\\\MessageForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { sendMessage, isTyping } from 'react-chat-engine';\nimport { sendOutlined, PictureOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageForm = props => {\n  _s();\n\n  const [value, setValue] = useState(''); // Initial Value Of Message Is An Empty String\n  //Props To Be Reconstructed\n\n  const {\n    chatId,\n    creds\n  } = props;\n\n  const handleSubmit = event => {\n    event.preventDefault(); //Prevents The Browser From Refreshing When Form Is Submitted\n\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, {\n        text\n      });\n      setValue('');\n    }\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value); //Value Of Input\n\n    isTyping(props, chatId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"message-form\",\n    onSubmit: \"handleSubmit\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"message-input\",\n      placeholder: \"Type a message\",\n      value: value,\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"image-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageForm, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["C:/xampp/htdocs/chat_application/src/components/MessageForm.jsx"],"names":["useState","sendMessage","isTyping","sendOutlined","PictureOutlined","MessageForm","props","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","handleChange","target"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,mBAAtC;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,mBAA9C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CAD2B,CACa;AACxC;;AACA,QAAM;AAAES,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBJ,KAAzB;;AAEA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN,GAD4B,CACJ;;AAExB,UAAMC,IAAI,GAAGP,KAAK,CAACQ,IAAN,EAAb;;AAEA,QAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACjBf,MAAAA,WAAW,CAACS,KAAD,EAAQD,MAAR,EAAgB;AAAEK,QAAAA;AAAF,OAAhB,CAAX;AACAN,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GATD;;AAUA,QAAMS,YAAY,GAAIL,KAAD,IAAW;AAC5BJ,IAAAA,QAAQ,CAACI,KAAK,CAACM,MAAN,CAAaX,KAAd,CAAR,CAD4B,CACE;;AAE9BL,IAAAA,QAAQ,CAACI,KAAD,EAAQG,MAAR,CAAR;AACH,GAJD;;AAKA,sBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAC,cAAxC;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,WAAW,EAAC,gBAFhB;AAGI,MAAA,KAAK,EAAEF,KAHX;AAII,MAAA,QAAQ,EAAEU,YAJd;AAKI,MAAA,QAAQ,EAAEN,YALd;AAMI,MAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAnCD;;GAAMN,W;;KAAAA,W;AAqCN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { sendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState(''); // Initial Value Of Message Is An Empty String\r\n    //Props To Be Reconstructed\r\n    const { chatId, creds} = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault(); //Prevents The Browser From Refreshing When Form Is Submitted\r\n\r\n        const text = value.trim();\r\n\r\n        if (text.length > 0) {\r\n            sendMessage(creds, chatId, { text });\r\n            setValue('');\r\n        }\r\n    }\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value); //Value Of Input\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n    return (\r\n        <form className=\"message-form\" onSubmit=\"handleSubmit\">\r\n            <input \r\n                className=\"message-input\" \r\n                placeholder=\"Type a message\" \r\n                value={value} \r\n                onChange={handleChange} \r\n                onSubmit={handleSubmit}\r\n                type=\"text\"\r\n            />\r\n            <label htmlFor='upload-button'> \r\n                <span className='image-button'></span>\r\n            </label>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm;"]},"metadata":{},"sourceType":"module"}